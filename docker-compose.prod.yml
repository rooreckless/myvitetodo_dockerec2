version: "3"
services:
  #本番環境では、vueの内容はビルドされて、nginxに搭載されることを前提とします。
  #なのでvueサービスが消えます。
  # vue:
  #   build: ./vue
  #   container_name: myvitetodo_vue_cnt
  #   ports:
  #     - 5173:5173
  #   volumes:
  #     - type: bind
  #       source: "./vue"
  #       target: "/usr/src/app"
  #   tty: true
  #   command: sh -c "cd my-vite-todo && npm install && npm run dev"
  flask:
    ports:
      - 5000:5000
    #開発環境用環境変数を読み込む = このコンテナ自体の環境変数となる
    env_file: "prodenv.env"
    #開発用のgunicorn起動コマンド
    command: gunicorn -w 2 -b 0.0.0.0:5000 'apps.app:create_app("product")'
  # mariadb:
  #   volumes:
  #   #開発環境用データ永続化(サービス外ボリュームへ)
  #     - type: volume
  #       source: myvitetodo_db_datavol
  #       target: /var/lib/mysql
  #   #DB初期化用sql
  #     # - type: bind
  #     #   source: ./mariadb/sqls
  #     #   target: "/docker-entrypoint-initdb.d"
  #   # cnf設定
  #     - type: bind
  #       source: "./mariadb/conf.d"
  #       target: "/etc/mysql/conf.d"
  #   env_file: "prodenv.env"
  nginx:
    #本番用のnginx設定ファイルのバインド
    volumes:
      - type: bind
        source: "./vue/my-vite-todo/dist"
        target: "/usr/share/nginx/html"
      - type: bind
        source: "./nginx/etc/nginx/prod_conf.d"
        target: "/etc/nginx/conf.d"
      - type: bind
        source: "/etc/letsencrypt/live/"
        target: "/etc/letsencrypt/live/"
    ports:
      - 80:80
      - 443:443
# #サービス外ボリュームを作成(開発環境でのデータ永続化処理)
# volumes:
#   myvitetodo_db_datavol: